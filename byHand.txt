# First we combine files from each lane
#we are using the following expression to combine gz files, it is slower than simply glueing them together but I think the compression is better 
#zcat file1.gz file2.gz file3.gz | gzip -c > allfiles-zcat.gz


cd rawdata

find . -type f -name "*R1_001.fastq.gz" -printf '%P\n' | awk -F '_' '{print $1"_"$2}' | sort | uniq |

while IFS= read -r i; do
sbatch <<EOL
#!/bin/bash
#SBATCH --ntasks=1
#SBATCH --time=06:00:00
#SBATCH --mem-per-cpu=60G
cd /home/gwm297/data/SeaChange_WP2/und
echo "Merging R1 for $i"
echo "Current directory: $(pwd)"
echo "Files for R1: ${i}_L001_R1_001.fastq.gz ${i}_L002_R1_001.fastq.gz ${i}_L003_R1_001.fastq.gz ${i}_L004_R1_001.fastq.gz"
zcat ${i}_L001_R1_001.fastq.gz ${i}_L002_R1_001.fastq.gz ${i}_L003_R1_001.fastq.gz ${i}_L004_R1_001.fastq.gz | gzip -c > ${i}_R1.fastq.gz
EOL

sbatch <<EOL
#!/bin/bash
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --time=06:00:00
#SBATCH --mem-per-cpu=60G
cd /home/gwm297/data/SeaChange_WP2/und
echo "Merging R2 for $i"
echo "Current directory: $(pwd)"
echo "Files for R2: ${i}_L001_R2_001.fastq.gz ${i}_L002_R2_001.fastq.gz ${i}_L003_R2_001.fastq.gz ${i}_L004_R2_001.fastq.gz"
zcat ${i}_L001_R2_001.fastq.gz ${i}_L002_R2_001.fastq.gz ${i}_L003_R2_001.fastq.gz ${i}_L004_R2_001.fastq.gz | gzip -c > ${i}_R2.fastq.gz
EOL
done

mv *R1.fastq.gz ../1.concatdata
mv *R2.fastq.gz ../1.concatdata
cd ../1.concatdata

##### we are here 

time cat *L00[0-9]_R1_001.fastq.gz > test.Undetermined_S0_R1.fastq.gz


# Trimming and QC of raw demultiplexed reads 
## VSEARCH v2.22.1_linux_x86_64
## fastp 0.23.4

find . -type f -name "*R1.fastq.gz" -printf '%P\n' | awk -F '_' '{print $1"_"$2}' | sort | uniq |
while IFS= read -r i; do

sbatch <<EOL
#!/bin/bash
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --time=06:00:00
#SBATCH --mem=200G
cd /home/gwm297/data/SeaChange_WP2/und
module load fastp
module load vsearch
echo "Trimming $i"
fastp  -i ${i}_R1.fastq.gz -I ${i}_R2.fastq.gz -m --merged_out ${i}.trim.fastq -V --detect_adapter_for_pe -D --dup_calc_accuracy 5  -g -x -q 30 -e 25 -l 25 -y -c -p -h ${i}.fastp.report.html -w 8
echo "Dedup $i"
vsearch --fastx_uniques ${i}.trim.fastq --fastqout ${i}.trim.vs.fastq --minseqlength 25 --strand both
gzip ${i}.trim.vs.fastq
EOL
done;


mv *.trim.vs.fastq.gz ../2.filtereddata/

